{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12600\viewh14000\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs24 \cf0 Helpers:
\b0 \
codeAddress(address):\
//given an address complete with city and state, returns the lat/long through google map interface\
	if no address given (on promise) returns error\
	if address not found, (on promise) returns error\
	if address is given,  (on promise) expected lat/long pair \
\
getTable(type):\
//given a type, returns the Parse table object associated with it.\
	if no type given, returns null\
	if given a user, discipline, event, tag, or venue, returns appropriate Parse object\
\
tableCol(type):\
//given a type, returns a list of all cols associated with that table\
	if type does not exist, returns an error\
	returns correct listing for one category of item\
\
dataExists(type, col, data):\
//given a type, col, and data, returns if data exists in table in col.\
	if not appropriate type, what is the behavior\
	if no type, what is the behavior\
	given a findable column and data element, (on promise) returns expected data\
\
	if no column, throw appropriate error\
	if not appropriate column, what is the behavior\
\
	if not data is not founded, what is the behavior\
	if no data, what is the behavior\
\
listExists(type, col, list):\
//given type, col and array of data, returns if an \{type:type, col:col, allExist:boolean, exist_items:(list of items that exist), uniq_items:(list of items that do not exist)\}\
	if all object in list are found, does it return the appropate list elements\
	if all object in list are no found, does it return the approprate list elements\
	if half of the objects in list are found, does it return the appropriate list elements\
	if empty list is provided, what is the behavoir\
\
	if not appropriate type is provided, what is the behavoir\
	if no type is provided, what is the behavior\
	\
	if not appropriate col is provided, what is the behavior\
	if no col is provided, what is the behavior\
	\
\

\b Validation:
\b0 \
validate(type, data):\
//given a type and potential data, return true if passes validation and possibility adds auto generated data\
	if no type is given, returns an error\
	User:\
		If no username, returns error.\
		If no email, returns error.\
		if no password, returns error.\
		(if week password, returns error)\
		\
		If username already exists, does it return an error?\
		If a tag is attached that does not exist, does it return an error?\
		If a discipline is attached that does not exist, does it return an error?\
			\
		\
	Venue: \
		If no title, returns error.\
		If no address, returns error.\
		If no city, returns error.\
		If no state, returns error.\
		If createdBy exists, automatically add to admin_users.\
	\
		Is the appropriate lat/long added to the data?\
		If a tag is attached that does not exist, does it return an error?\
		If a discipline is attached that does not exist, does it return an error?\
	\
	Event:\
		If no title, returns an error\
		If no venue, returns an error\
		If no cost, auto set to zero.\
		If no timing_mode, set to one-time.\
		If createdBy exists, automatically add to admin_users.\
		\
		If a tag is attached that does not exist, does it return an error?\
		If a discipline is attached that does not exist, does it return an error?\
		\
\
	Tag:\
		If no title, returns an error		\
		If a tag with title already exists, does it return an error?\
\
	Discipline:\
		If no title, returns an error\
		If parent does not exist, returns an error.\
		If a discipline with title already exists, does it return an error?\
		\
\

\b CRUD:
\b0 \
create(type, data):\
//given type and data, performs validation, puts data into the database and returns object of in plugin data form\
	if no type is given returns an error.\
	if no data is given, what is the behavior.\
\
	User:\
		Does it appropriately create a User?\
		Does it pass through validation tests for user?\
\
	Venue:\
		Does it appropriately create a Venue?\
		Does it pass through validation tests for venue?\
\
	Event:\
		Does it appropriately create an Event?\
		Does it pass through validation tests for event?\
	\
	Tag:\
		Does it appropriately create an Tag?\
		Does it pass through validation tests for tag?\
\
	Discipline:\
		Does it appropriately create an Discipline?\
		Does it pass through validation tests for Discipline?\
\
read(type, query_params, ordering, pagination)\
//given parameters, returns:\
	all data that matches query_params: 	\
		[\{ col_name: name, \
		searchType: \'93range/full_text/equal/less_then/greater_then\'94, \
		values:[\'93value1\'94, \'93value2\'94] (if range, assume only two values, if less_then, greater_then, on test first value\}];\
	in an order that follows the ordering object:\
		\{\
		 column:\'94column_name\'94,\
		 direction:\'94up/down\'94\
		\}\
	broken into pieces that follow the pagination object\
		\{\
		limit:the items on a page,\
		page:page number\
		\}\
\
	if no type is given, returns an error.\
	\
	if no order is given, default to createdAt, up.\
	if order is given and col does not exist, returns error.\
	if order is given, and direction is not, default to up\
	if order direction is up on a date field, returned expected\
	if order direction is down on a data field, returns expected\
	if order direction is up on a string field, returns expected\
	if order direction is down on a string field, returns expected\
		\
	if no pagination is given, returns all values\
	if pagination limit is given, limit is available and page is not, assumes page:0.\
	if pagination limit is given, and limit is > values in database, returns all values in table\
	if pagination page is > 0, returns appropriate values.\
	if pagination page is > amount of items in database, returns remaining items.\
	\
	if column is specified within query_params that does not exist, returns error\
	if searchType is specified within query_params that does not exist, return error\
\
	User:\
		if no query_params are given, returns all values\
		\
	Venue:\
		if no query_params are given, returns all values\
\
	Event:\
		if no query_params are given, returns all values\
\
	Tag:\
		if no query_params are given, returns all values}